<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="주문이력현황_test3" width="1080" height="670" titletext="주문이력현황" oninit="주문이력현황_test3_oninit">
    <Layouts>
      <Layout height="670" width="1080">
        <Grid id="Grid00" taborder="0" left="40" top="160" height="410" binddataset="result_grid" autofittype="col" right="60">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="53"/>
                <Column size="74"/>
                <Column size="45"/>
                <Column size="80"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="이름"/>
                <Cell col="1" text="메뉴"/>
                <Cell col="2" text="갯수"/>
                <Cell col="3" text="주문날짜"/>
              </Band>
              <Band id="body">
                <Cell text="bind:USER_NAME" textAlign="center" verticalAlign="middle"/>
                <Cell col="1" text="bind:PRODUCT_NAME" textAlign="center" verticalAlign="middle"/>
                <Cell col="2" text="bind:ORDER_QUANTITY"/>
                <Cell col="3" text="bind:PAYMENT_DATE" displaytype="date" calendardateformat="yyyy-MM-dd HH:mm:ss ddd" calendareditformat="yyyy-MM-dd HH:mm:ss ddd"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Edit id="Edit00" taborder="1" left="85" top="44" width="91" height="20" displaynulltext="이름"/>
        <Combo id="Combo00" taborder="2" text="Combo00" left="85" top="74" width="91" height="20" innerdataset="food_combo" datacolumn="PRODUCT_NAME" codecolumn="PRODUCT_CODE" onitemchanged="Combo00_onitemchanged" type="search"/>
        <Combo id="Combo01" taborder="3" text="" left="85" top="104" width="91" height="20" value="" index="-1" innerdataset="month_combo" datacolumn="PAYMENT_MONTH" codecolumn="PAYMENT_MONTH" rtl="" onitemchanged="Combo01_onitemchanged" displaynulltext="월"/>
        <Calendar id="Calendar00" taborder="4" left="85" top="131" width="91" height="20" onchanged="Calendar00_onchanged"/>
        <Calendar id="Calendar00_00" taborder="5" top="131" height="20" onchanged="Calendar00_00_onchanged" width="91" left="192"/>
        <Button id="Button00" taborder="6" text="조회하기" left="325" top="128" width="91" height="27" onclick="Button00_onclick"/>
        <Static id="Static01" taborder="7" text="월" left="180" top="104" width="12" height="20"/>
        <Static id="Static00" taborder="8" text="이름" left="40" top="47" width="24" height="14"/>
        <Static id="Static02" taborder="9" text="메뉴" left="40" top="77" width="24" height="14"/>
        <Static id="Static03" taborder="10" text="날짜" left="40" top="107" width="24" height="14"/>
        <Static id="Static04" taborder="11" text="-" left="181" top="133" width="6" height="17"/>
        <Button id="Button02" taborder="12" text="엑셀파일 저장" left="928" top="128" width="91" height="27" onclick="Button02_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[/*
1. 화면 초기화
2. 버튼 이벤트
3. 함수
4. 기간조건 디테일
*/

/* 1. 화면 초기화 */
this.주문이력현황_test3_oninit = function(obj:nexacro.Form,e:nexacro.EventInfo)
{
	this.fnMenuCombo();
	this.month_combo.insertRow(0);
	this.month_combo.setColumn(0, "PAYMENT_MONTH", "전체보기");
	this.day_combo.insertRow(0);
	this.day_combo.setColumn(0, "PAYMENT_DAY", "전체보기");
};


/* 2. 조회하기 버튼 이벤트 */
this.Button00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	
	
	// 새로운 행 추가
	this.search_combo.addRow();	
	// 사용자가 선택한 Combo값으로 컬럼값 설정
	this.search_combo.setColumn(0,"USER_NAME",this.Edit00.value);
	this.search_combo.setColumn(0,"PRODUCT_CODE",this.Combo00.value);
	this.search_combo.setColumn(0,"PAYMENT_MONTH",this.Combo01.value);
	this.search_combo.setColumn(0,"PAYMENT_WEEK1",this.Calendar00.value);
	this.search_combo.setColumn(0,"PAYMENT_WEEK2",this.Calendar00_00.value);
	
	this.fnViewList();
};

/* 3. fnMenuCombo() : 음식메뉴 콤보 */
this.fnMenuCombo=function(){
  var strSvcId    = "MenuCombo";
  var strSvcUrl   = "svc::MenuCombo.do";
  var inData      = "";
  var outData     = "food_combo=food_combo";
  var strArg      = "";
  var callBackFnc = "fnCallback";
  var isAsync     = true;

  this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);    
};

/* 3-1. fnViewList() : 조회하기 */
this.fnViewList = function()
{
  var strSvcId    = "ViewList";
  var strSvcUrl   = "svc::ViewList.do";
  var inData      = "search_combo=search_combo";
  var outData     = "result_grid=result_grid";
  var strArg      = "";
  var callBackFnc = "fnCallback";
  var isAsync     = true;

  this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);    
}

/* 3-2. 콜백함수 */
this.fnCallback = function(svcID,errorCode,errorMsg)
{
   // 에러 시 화면 처리 내역
   if(errorCode == -1)
   {
      this.alert("이상해!");
      return;
   }
   // 분기문
   switch(svcID)
   {
       // 콤보 조회 시
       case "MenuCombo" :
          this.food_combo.insertRow(0);   // food_combo dataset에 첫번째 행 추가
          this.food_combo.setColumn(0, "PRODUCT_NAME", "메뉴전체");   // 추가한 행의 내용을 설정
         break;
      // 조회버튼을 누를 시 
       case "ViewList" :
          if(this.result_grid.rowcount < 1){
             this.alert("조회된 결과가 없습니다.");
             break;
          }
   };
   
};


/* 4. 기간조건 디테일 */
this.Combo01_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{
	var month = this.Combo01.value;
	if(month != null){
	this.Calendar00.set_value(null);
	this.Calendar00_00.set_value(null);
	}
};

this.Calendar00_onchanged = function(obj:nexacro.Calendar,e:nexacro.ChangeEventInfo)
{
	var Calendar00 = this.Calendar00.value;
	if(Calendar00 != null){
	this.Combo01.set_value(null);
	}
};
this.Calendar00_00_onchanged = function(obj:nexacro.Calendar,e:nexacro.ChangeEventInfo)
{
	var Calendar00_00 = this.Calendar00_00.value;
	if(Calendar00_00 != null){
	this.Combo01.set_value(null);
	}
};

/* 엑셀 파일 저장 버튼 */
this.Button02_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(this.result_grid.getRowCount() == 0){
		alert("조회된 데이터가 없습니다.");
		return;
	}
	
};
]]></Script>
    <Objects>
      <Dataset id="food_combo">
        <ColumnInfo>
          <Column id="PRODUCT_NAME" type="STRING" size="256"/>
          <Column id="PRODUCT_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="result_grid">
        <ColumnInfo>
          <Column id="ORDER_CODE" type="STRING" size="256"/>
          <Column id="USER_NAME" type="STRING" size="256" description="회원성명"/>
          <Column id="PRODUCT_NAME" type="STRING" size="256" description="메뉴"/>
          <Column id="ORDER_QUANTITY" type="STRING" size="256" description="갯수"/>
          <Column id="PAYMENT_DATE" type="STRING" size="256" description="기간"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="search_combo">
        <ColumnInfo>
          <Column id="PRODUCT_CODE" type="STRING" size="256"/>
          <Column id="PRODUCT_NAME" type="STRING" size="256"/>
          <Column id="USER_NAME" type="STRING" size="256"/>
          <Column id="PAYMENT_MONTH" type="STRING" size="256"/>
          <Column id="PAYMENT_DAY" type="STRING" size="256"/>
          <Column id="PAYMENT_WEEK1" type="STRING" size="256"/>
          <Column id="PAYMENT_WEEK2" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="month_combo">
        <ColumnInfo>
          <Column id="PAYMENT_MONTH" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="PAYMENT_MONTH">01</Col>
          </Row>
          <Row>
            <Col id="PAYMENT_MONTH">02</Col>
          </Row>
          <Row>
            <Col id="PAYMENT_MONTH">03</Col>
          </Row>
          <Row>
            <Col id="PAYMENT_MONTH">04</Col>
          </Row>
          <Row>
            <Col id="PAYMENT_MONTH">05</Col>
          </Row>
          <Row>
            <Col id="PAYMENT_MONTH">06</Col>
          </Row>
          <Row>
            <Col id="PAYMENT_MONTH">07</Col>
          </Row>
          <Row>
            <Col id="PAYMENT_MONTH">08</Col>
          </Row>
          <Row>
            <Col id="PAYMENT_MONTH">09</Col>
          </Row>
          <Row>
            <Col id="PAYMENT_MONTH">10</Col>
          </Row>
          <Row>
            <Col id="PAYMENT_MONTH">11</Col>
          </Row>
          <Row>
            <Col id="PAYMENT_MONTH">12</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
  </Form>
</FDL>
