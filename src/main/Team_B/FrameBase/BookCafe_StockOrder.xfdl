<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="주문관리" width="1080" height="720" titletext="재고관리" oninit="주문관리_oninit" onload="주문관리_onload" onclick="btntxt_onclick">
    <Layouts>
      <Layout height="720" mobileorientation="landscape" width="1080">
        <Grid id="Grid01" taborder="7" left="20" binddataset="view_dtl" autofittype="col" right="20" bottom="60" cssclass="grid_default" top="420" onsize="stock02_div_Grid00_onsize">
          <Formats>
            <Format id="입고대기">
              <Columns>
                <Column size="13"/>
                <Column size="50"/>
                <Column size="102"/>
                <Column size="49"/>
                <Column size="71"/>
                <Column size="70"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="checkboxcontrol" background="#FFF8EE" text="bind:CHK" checkboxfalsevalue="N" checkboxtruevalue="Y" edittype="checkbox"/>
                <Cell col="1" text="발주상태" background="#FFF8EE"/>
                <Cell col="2" text="제품명" background="#FFF8EE"/>
                <Cell col="3" text="발주수량" background="#FFF8EE"/>
                <Cell col="4" text="발주일시" background="#FFF8EE"/>
                <Cell col="5" text="신청자" background="#FFF8EE"/>
              </Band>
              <Band id="body">
                <Cell displaytype="checkboxcontrol" text="bind:CHK" checkboxfalsevalue="N" checkboxtruevalue="Y" edittype="expr:STOCK_ORDER_STATUS_IN != null ? 'none' : 'checkbox'"/>
                <Cell col="1" textAlign="center" displaytype="combotext" combocodecol="STOCK_ORDER_STATUS_IN" combodatacol="TEXT" combodataset="ds_stockorder_state" edittype="none" text="bind:STOCK_ORDER_STATUS"/>
                <Cell col="2" text="bind:PRODUCT_NAME" textAlign="center"/>
                <Cell col="3" text="bind:STOCK_ORDER_QUANTITY" textAlign="center"/>
                <Cell col="4" text="bind:STOCK_ORDER_DATE" textAlign="center" calendardateformat="yyyy-MM-dd HH:mm:ss" calendareditformat="yyyy-MM-dd HH:mm:ss" displaytype="date"/>
                <Cell col="5" text="bind:USER_CODE" textAlign="center"/>
              </Band>
            </Format>
            <Format id="입고완료">
              <Columns>
                <Column size="48"/>
                <Column size="140"/>
                <Column size="40"/>
                <Column size="111"/>
                <Column size="50"/>
                <Column size="111"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="발주상태" background="#FFF8EE" textAlign="center"/>
                <Cell col="1" text="제품명" background="#FFF8EE" textAlign="center"/>
                <Cell col="2" text="발주수량" background="#FFF8EE" textAlign="center"/>
                <Cell col="3" text="발주일시" background="#FFF8EE" textAlign="center"/>
                <Cell col="4" text="신청자" background="#FFF8EE" textAlign="center"/>
                <Cell col="5" background="#FFF8EE" calendardateformat="yyyy-MM-dd HH:mm:ss" calendareditformat="yyyy-MM-dd HH:mm:ss" text="입고일시" textAlign="center"/>
              </Band>
              <Band id="body">
                <Cell text="bind:STOCK_ORDER_STATUS" edittype="none" combodataset="ds_stockorder_state" combodatacol="TEXT" combocodecol="STOCK_ORDER_STATUS_IN" textAlign="center" displaytype="combotext"/>
                <Cell col="1" text="bind:PRODUCT_NAME" textAlign="center"/>
                <Cell col="2" text="bind:STOCK_ORDER_QUANTITY" textAlign="center"/>
                <Cell col="3" displaytype="date" calendardateformat="yyyy-MM-dd HH:mm:ss" calendareditformat="yyyy-MM-dd HH:mm:ss" text="bind:STOCK_ORDER_DATE" textAlign="center"/>
                <Cell col="4" text="bind:USER_CODE" textAlign="center"/>
                <Cell col="5" displaytype="date" calendardateformat="yyyy-MM-dd HH:mm:ss" calendareditformat="yyyy-MM-dd HH:mm:ss" text="bind:STOCK_ORDER_IN_DATE" textAlign="center"/>
              </Band>
            </Format>
            <Format id="발주취소">
              <Columns>
                <Column size="48"/>
                <Column size="140"/>
                <Column size="40"/>
                <Column size="111"/>
                <Column size="50"/>
                <Column size="111"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="발주상태" background="#FFF8EE" textAlign="center"/>
                <Cell col="1" text="제품명" background="#FFF8EE" textAlign="center"/>
                <Cell col="2" text="발주수량" background="#FFF8EE" textAlign="center"/>
                <Cell col="3" text="발주일시" background="#FFF8EE" textAlign="center"/>
                <Cell col="4" text="신청자" background="#FFF8EE" textAlign="center"/>
                <Cell col="5" background="#FFF8EE" calendardateformat="yyyy-MM-dd HH:mm:ss" calendareditformat="yyyy-MM-dd HH:mm:ss" text="취소일시" textAlign="center"/>
              </Band>
              <Band id="body">
                <Cell text="bind:STOCK_ORDER_STATUS" edittype="none" combodataset="ds_stockorder_state" combodatacol="TEXT" combocodecol="STOCK_ORDER_STATUS_IN" textAlign="center" displaytype="combotext"/>
                <Cell col="1" text="bind:PRODUCT_NAME" textAlign="center"/>
                <Cell col="2" text="bind:STOCK_ORDER_QUANTITY" textAlign="center"/>
                <Cell col="3" displaytype="date" calendardateformat="yyyy-MM-dd HH:mm:ss" calendareditformat="yyyy-MM-dd HH:mm:ss" text="bind:STOCK_ORDER_DATE" textAlign="center"/>
                <Cell col="4" text="bind:USER_CODE" textAlign="center"/>
                <Cell col="5" displaytype="date" calendardateformat="yyyy-MM-dd HH:mm:ss" calendareditformat="yyyy-MM-dd HH:mm:ss" text="bind:STOCK_ORDER_IN_DATE" textAlign="center"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Div id="Div01" taborder="5" text="Div01" left="20" height="40" right="20" cssclass="main_nav" bottom="Grid01:40">
          <Layouts>
            <Layout>
              <ImageViewer id="ImageViewer00" taborder="6" left="15" top="17" width="6" height="6" cssclass="iv_none_border" image="url('theme::default/images/nav_logo.png')" stretch="fit"/>
              <Static id="Static02" taborder="0" text="발주상태" left="ImageViewer00:5" top="13" width="48" height="14"/>
              <Combo id="Combo00" taborder="5" text="Combo00" left="Static02:5" top="5" width="130" height="30" innerdataset="ds_stockorder_state" datacolumn="TEXT" codecolumn="STOCK_ORDER_STATUS_IN" cssclass="combo_default" onitemchanged="Div01.form.Combo00_onitemchanged" displaynulltext="대기/완료/취소"/>
              <ImageViewer id="ImageViewer00_00" taborder="7" left="Combo00:30" top="17" width="6" height="6" cssclass="iv_none_border" image="url('theme::default/images/nav_logo.png')" stretch="fit"/>
              <Static id="Static00_00" taborder="1" text="발주기간" left="ImageViewer00_00:5" top="13" width="48" height="14"/>
              <Calendar id="Calendar00" taborder="2" left="Static00_00:5" top="5" width="110" height="30" cssclass="cal_default" onchanged="Date_start_onchanged"/>
              <Static id="Static01" taborder="4" text="~" left="Calendar00:3" top="13" width="9" height="14"/>
              <Calendar id="Calendar01" taborder="3" left="Static01:3" top="5" width="110" height="30" cssclass="cal_default" onchanged="Date_start_onchanged"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="Static00" taborder="1" text="재고/입고 관리" left="20" top="20" width="210" height="37" initvalueid="" cssclass="main_title"/>
        <Div id="Div00" taborder="2" left="20" top="Static00:40" text="" cssclass="main_nav" right="20" height="40">
          <Layouts>
            <Layout>
              <ImageViewer id="ImageViewer00_00" taborder="3" left="15" top="17" width="6" height="6" cssclass="iv_none_border" image="url('theme::default/images/nav_logo.png')" stretch="fit"/>
              <Static id="Static03" taborder="2" text="분류" left="ImageViewer00_00:5" top="13" width="24" height="14"/>
              <Combo id="Combo00" taborder="1" left="Static03:5" top="5" width="130" height="30" cssclass="combo_default" innerdataset="find_sec_combo" datacolumn="SEC_NAME" codecolumn="SEC_CODE" onitemchanged="Combo00_onitemchanged" displaynulltext="음료/빵/샐러드"/>
              <Combo id="Combo03" taborder="0" left="Combo00:3" top="5" width="227" height="30" value="" index="-1" onitemchanged="Div00.form.Combo03_onitemchanged" cssclass="combo_default" displaynulltext="메뉴명" innerdataset="find_thir_combo" datacolumn="PRODUCT_NAME" codecolumn="PRODUCT_CODE"/>
            </Layout>
          </Layouts>
        </Div>
        <Grid id="Grid00" taborder="0" left="20" autofittype="col" binddataset="stock_grid1" right="20" cssclass="grid_default" height="143" top="Div00:40">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="9"/>
                <Column size="100"/>
                <Column size="49"/>
                <Column size="37"/>
                <Column size="49"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="bind:CHK" displaytype="checkboxcontrol" edittype="checkbox" checkboxfalsevalue="N" checkboxtruevalue="Y" background="#FFF8EE"/>
                <Cell col="1" text="제품명" background="#FFF8EE"/>
                <Cell col="2" text="제품코드" background="#FFF8EE"/>
                <Cell col="3" text="현재재고" background="#FFF8EE"/>
                <Cell col="4" text="발주수량" editinputtype="number" background="#FFF8EE"/>
              </Band>
              <Band id="body">
                <Cell displaytype="checkboxcontrol" edittype="checkbox" text="bind:CHK" checkboxfalsevalue="N" checkboxtruevalue="Y"/>
                <Cell col="1" text="bind:PRODUCT_NAME" textAlign="center"/>
                <Cell col="2" text="bind:PRODUCT_CODE" textAlign="center"/>
                <Cell col="3" displaytype="decoratetext" edittype="none" textAlign="center" text="bind:PRODUCT_QUANTITY" cssclass="expr:PRODUCT_QUANTITY &lt; 10 ? 'grid_quantity' : ''"/>
                <Cell col="4" displaytype="normal" textAlign="center" editinputfilter="none,space,comma" editinputtype="number" rtl="false" text="bind:STOCK_ORDER_QUANTITY" editmaxlength="2" edittype="text"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="Button00" taborder="3" text="발주신청" onclick="Button00_onclick" cssclass="btn_save" right="20" bottom="Grid00:5" height="30" width="71"/>
        <Static id="Static01" taborder="4" text="재고 관리" left="20" cssclass="title_sub" height="24" right="971" bottom="Grid00:5"/>
        <Static id="Static00_00" taborder="6" text="입고 관리 - 입고대기" left="20" width="193" height="24" cssclass="title_sub" bottom="Grid01:5"/>
        <Button id="Button00_00" taborder="8" text="엑셀저장" height="30" right="20" width="70" cssclass="btn_save" onclick="stock02_div_Button00_onclick" bottom="Grid01:5"/>
        <Button id="Button02" taborder="10" text="발주취소" height="30" cssclass="btn_del" bottom="Grid01:5" width="70" right="Button00_00:5" onclick="btntxt_onclick"/>
        <Button id="Button01" taborder="9" text="입고완료" width="70" cssclass="btn_save" right="Button02:5" bottom="Grid01:5" height="30" onclick="btntxt_onclick"/>
        <ImageViewer id="ImageViewer00" taborder="11" top="20" width="26" height="25" image="url('imagerc::reset_ver3.png')" stretch="fit" fittocontents="none" text="" cssclass="iv_none_border" onclick="ImageViewer00_onclick" right="20"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[include "Base::check_sort_Stock_Order.xjs";
include "Base::paging.xjs"; 
/*
1. 화면 초기화
2. 이벤트
3. 함수d
4. 페이징
20240620 12:24 수정
분류 선택하기 전에 기간선택 못하게
*/
 
/****************************************************/  
/* 					1. 화면 초기화					*/
/****************************************************/ 
this.주문관리_onload = function(obj:nexacro.Form,e:nexacro.EventInfo)
{	
	//페이징 세팅
	//페이징 정보  page : 현재 페이지 pagesize : 한 페이지에 보여줄 row갯수
	this.pageinit(1,8,"Grid01","stock_grid2");
	
	// grid1 list 불러오기
	this.fnStockMenuList();
	
	// grid2 list 불러오기(입고대기)
	this.fnStocksOrderList();
	
	// 메뉴 combo
	this.fnFind_Sec_Combo();
	this.fnFind_Thir_Combo();
	
	// 체크박스+정렬 공통함수 끌어오기
	this.check_sort(this.Grid00);
	this.check_sort(this.Grid01);
	
	this.Div01.form.Combo00.set_index(0);

};

/****************************************************/  
/* 					2. 이벤트 정의					*/
/****************************************************/

/* 2-1. 중분류 선택 시 소분류 변화/자동 조회 */ 
this.Combo00_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{
	// 현재 사용자가 선택한 중분류코드 변수에 저장
	var sec_code = this.Div00.form.Combo00.value;
	// 중분류가 전체보기일 시 소분류도 전체가 나오게
	if(sec_code == ''){
	this.fnFind_Thir_Combo();
	}
	
	// 만약 소분류가 선택되어 있다면 충돌이 있으니 소분류 combo 초기화
	this.Div00.form.Combo03.set_value(null);
	
	this.find_thir_combo.clearData();
	this.find_thir_combo.addRow();
	this.find_thir_combo.setColumn(0,"SEC_CODE",sec_code);
	
	this.fnCheck_Thir_Combo();
	
	/* 중분류가 선택되면 grid1의 내용을 바로바로 불러옴 */
	// 새로운 행 추가
	this.search_so_grid.clearData();
	this.search_so_grid.addRow();
	// 중분류
	this.search_so_grid.setColumn(0,"SEC_CODE",this.Div00.form.Combo00.value);
	// grid1의 조회조건을 전달
	this.fnViewList();
	
	//////////////////// grid2 ////////////////////
	
	// 발주상태
	this.search_so_grid.setColumn(0,"STOCK_ORDER_STATUS",this.Div01.form.Combo00.value);
	//주간별
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_1",this.Div01.form.Calendar00.value);
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_2",this.Div01.form.Calendar01.value);
	// grid2의 조회조건을 조회버튼에 전달
	this.fnViewStockOrder();
};

/* 소분류 선택 시 grid1 자동 조회 */
this.Div00.form.Combo03_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{
	this.search_so_grid.clearData();
	
	// 새로운 행 추가
	this.search_so_grid.addRow();
	// 중분류
	this.search_so_grid.setColumn(0,"SEC_CODE",this.Div00.form.Combo00.value);
	// 소분류
	this.search_so_grid.setColumn(0,"PRODUCT_CODE",this.Div00.form.Combo03.value);
	// grid1의 조회조건을 조회 버튼에 전달
	this.fnViewList();
	
	//////////////////// grid2 ////////////////////
	
	// 발주상태
	this.search_so_grid.setColumn(0,"STOCK_ORDER_STATUS",this.Div01.form.Combo00.value);
	//주간별
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_1",this.Div01.form.Calendar00.value);
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_2",this.Div01.form.Calendar01.value);
	// grid2의 조회조건을 조회버튼에 전달
	this.fnViewStockOrder();
};

/* grid2 조회조건 변경시 자동조회 */
this.Div01.form.Combo00_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{
	var strFormat = this.Div01.form.Combo00.value;
    
	// 사용자가 입고대기 선택할 시
	if(strFormat == '0'){
	
	this.Div01.form.Calendar00.set_value();
	this.Div01.form.Calendar01.set_value();
	
	// 그리드의 포맷을 입고대기로 변경
    this.Grid01.set_formatid('입고대기');
	
	// 조회조건 중 기간의 text를 발주기간으로 변경
	this.Div01.form.Static00_00.set_text("발주기간");
	this.Static00_00.set_text("입고관리 - 입고대기")
	this.Button01.set_visible(true);
	this.Button02.set_visible(true);
	// 새로운 행 추가
	this.search_so_grid.addRow();
	// 중분류
	this.search_so_grid.setColumn(0,"SEC_CODE",this.Div00.form.Combo00.value);
	// 소분류
	this.search_so_grid.setColumn(0,"PRODUCT_CODE",this.Div00.form.Combo03.value);

	//////////////////// grid2 ////////////////////
	
	// 발주상태
	this.search_so_grid.setColumn(0,"STOCK_ORDER_STATUS",this.Div01.form.Combo00.value);
	//주간별
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_1",this.Div01.form.Calendar00.value);
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_2",this.Div01.form.Calendar01.value);
	// grid2의 조회조건을 조회버튼에 전달
	this.fnViewStockOrder();
	
	}else if(strFormat == '1'){	
	this.Div01.form.Calendar00.set_value();
	this.Div01.form.Calendar01.set_value();
	this.Grid01.set_formatid('입고완료')
	this.Div01.form.Static00_00.set_text("입고기간");
	this.Static00_00.set_text("입고관리 - 입고완료")
	
	// 입고완료/발주취소 버튼 숨기기
	this.Button01.set_visible(false);
	this.Button02.set_visible(false);
	
	this.search_so_grid.addRow();
	this.search_so_grid.setColumn(0,"SEC_CODE",this.Div00.form.Combo00.value);
	this.search_so_grid.setColumn(0,"PRODUCT_CODE",this.Div00.form.Combo03.value);
	this.search_so_grid.setColumn(0,"STOCK_ORDER_STATUS",this.Div01.form.Combo00.value);
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_1",this.Div01.form.Calendar00.value);
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_2",this.Div01.form.Calendar01.value);
	// grid2의 조회조건을 조회버튼에 전달
	this.fnViewStockOrder();
	
	}else if(strFormat == '2'){
	this.Div01.form.Calendar00.set_value();
	this.Div01.form.Calendar01.set_value();
	this.Grid01.set_formatid('발주취소')
	this.Div01.form.Static00_00.set_text("취소기간");
	this.Static00_00.set_text("입고관리 - 발주취소")
	this.Button01.set_visible(false);
	this.Button02.set_visible(false);
	this.search_so_grid.addRow();
	this.search_so_grid.setColumn(0,"SEC_CODE",this.Div00.form.Combo00.value);
	this.search_so_grid.setColumn(0,"PRODUCT_CODE",this.Div00.form.Combo03.value);
	this.search_so_grid.setColumn(0,"STOCK_ORDER_STATUS",this.Div01.form.Combo00.value);
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_1",this.Div01.form.Calendar00.value);
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_2",this.Div01.form.Calendar01.value);
	this.fnViewStockOrder();
	}
	
};

/* grid2 기간조건 변경시 자동조회 */
this.Date_start_onchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{
	var strFormat = this.Div01.form.Combo00.value;
	if(strFormat == '0')
	{
	// 새로운 행 추가
	this.search_so_grid.addRow();
	// 중분류
	this.search_so_grid.setColumn(0,"SEC_CODE",this.Div00.form.Combo00.value);
	// 소분류
	this.search_so_grid.setColumn(0,"PRODUCT_CODE",this.Div00.form.Combo03.value);

	//////////////////// grid2 ////////////////////
	
	// 발주상태
	this.search_so_grid.setColumn(0,"STOCK_ORDER_STATUS",this.Div01.form.Combo00.value);
	//주간별
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_1",this.Div01.form.Calendar00.value);
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_2",this.Div01.form.Calendar01.value);
	// grid2의 조회조건을 조회버튼에 전달
	this.fnViewStockOrder();	
	}else if(strFormat == '1')
	{
	// 새로운 행 추가
	this.search_so_grid.addRow();
	// 중분류
	this.search_so_grid.setColumn(0,"SEC_CODE",this.Div00.form.Combo00.value);
	// 소분류
	this.search_so_grid.setColumn(0,"PRODUCT_CODE",this.Div00.form.Combo03.value);

	//////////////////// grid2 ////////////////////
	
	// 발주상태
	this.search_so_grid.setColumn(0,"STOCK_ORDER_STATUS",this.Div01.form.Combo00.value);
	//주간별
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_1",this.Div01.form.Calendar00.value);
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_2",this.Div01.form.Calendar01.value);
	// grid2의 조회조건을 조회버튼에 전달
	this.fnViewStockOrder();	
	}else if(strFormat == '2'){
	// 새로운 행 추가
	this.search_so_grid.addRow();
	// 중분류
	this.search_so_grid.setColumn(0,"SEC_CODE",this.Div00.form.Combo00.value);
	// 소분류
	this.search_so_grid.setColumn(0,"PRODUCT_CODE",this.Div00.form.Combo03.value);

	//////////////////// grid2 ////////////////////
	
	// 발주상태
	this.search_so_grid.setColumn(0,"STOCK_ORDER_STATUS",this.Div01.form.Combo00.value);
	//주간별
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_1",this.Div01.form.Calendar00.value);
	this.search_so_grid.setColumn(0,"STOCK_ORDER_DATE_2",this.Div01.form.Calendar01.value);
	// grid2의 조회조건을 조회버튼에 전달
	this.fnViewStockOrder();	
	}
}

/* 2-3. grid1 발주신청 버튼 */
this.Button00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	
	/* (1) 체크된 row갯수 count */
	//조건식을 문자열로 작성하여 전달
    var condition = "CHK" + " == 'Y'";
	
    // getCaseCount 메서드 호출
    var chkCnt = this.stock_grid1.getCaseCount(condition);
	
	/* (2) 체크된 행 카운트 */
    if (chkCnt > 0) {
		this.stock_order.clearData();
		
		// 세션에서 ADMIN_CODE 가져오기
		var sessionLogin = nexacro.getApplication().Session_login;
		var adminCode = sessionLogin.getColumn(0, "USER_CODE");
		
		/* (3) 로그인 분기문 */
		if(adminCode != null){
		
		 /* (4) 체크된 항목 가져오기 */
		for(var i=0; i<this.stock_grid1.rowcount; i++){
			if(this.stock_grid1.getColumn(i, "CHK") == "Y"){
				
				//체크된 항목 중 STOCK_ORDER_QUANTITY 값 판단
				var orderquantity = this.stock_grid1.getColumn(i, "STOCK_ORDER_QUANTITY");
				if(orderquantity <= 0 || orderquantity == null || orderquantity == ""){
					alert("입력된 수량을 확인해주세요.");
					return;
				}
				
				var row = this.stock_order.addRow();
				//dataset에 ADMIN_CODE 추가
				this.stock_order.setColumn(row,"USER_CODE",adminCode);
				this.stock_order.copyRow(row, this.stock_grid1, i);
			}
		}
		
		alert("발주신청이 완료되었습니다.");
		// grid1 list 불러오기
		this.fnStockMenuList();
		this.fnSaveStockOrder();
		
// 		// grid2 list에 입고대기 리스트 불러오기
// 		this.fnStocksOrderList();
		
		this.reload();
	} else {
        this.alert("로그인을 해주세요.");
    }
	}else{
		 this.alert("선택된 항목이 없습니다.");
	}

}; 

/* 2-4. grid2 입고완료/발주취소 버튼 */
this.btntxt_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	
	// 클릭된 버튼의 text값 가져오기
	var btntxt = obj.text;
	
	if(btntxt == '입고완료'){
	
		var upstock = this.confirm("입고완료로 변경 시 되돌릴 수 없습니다. 진행하시겠습니까?","입고완료");
		
		// 사용자가 confirm 확인 선택 시
		if(upstock == true){

			/* (1) 체크된 row갯수 count */
			//조건식을 문자열로 작성하여 전달
			var condition = "CHK" + " == 'Y'";
	
			// getCaseCount 메서드 호출하여 조건식에 맞는 row를 카운트
			var chkCnt = this.view_dtl.getCaseCount(condition);
		
			/* (2) 체크된 행 카운트 */
			if (chkCnt > 0) {
	
				this.stock_order_update.clearData();
		
				// 세션에서 ADMIN_CODE 가져오기
				var sessionLogin = nexacro.getApplication().Session_login;
				var masterCode = sessionLogin.getColumn(0, "USER_CODE");
		
				//로그인 분기문(추후에 null 대신 마스터 계정으로 변경하기)
				if(masterCode != null){
				
				//체크된 항목 카운트
				for(var i=0; i<this.view_dtl.rowcount; i++){
					if(this.view_dtl.getColumn(i, "CHK") == "Y"){
						var row = this.stock_order_update.addRow();
				
						//dataset에 ADMIN_CODE 추가
						this.stock_order_update.copyRow(row, this.view_dtl, i);
						this.stock_order_update.setColumn(row,"STOCK_ORDER_STATUS", 1);
				}
			} // for end
			/* 재고합연산 + 상태Y/N + 새로고침 */
			this.fnUpdateStockQuantity();
			this.fnUpdateStockOrder();
			this.reload();
		}
	}else{
	alert("선택된 항목이 없습니다.");
	}
	}
	
	}else if(btntxt == '발주취소'){
	
		var upstock = this.confirm("발주취소로 변경 시 되돌릴 수 없습니다. 진행하시겠습니까?","발주취소");
		
		// 사용자가 confirm 확인 선택 시
		if(upstock == true){

			/* (1) 체크된 row갯수 count */
			//조건식을 문자열로 작성하여 전달
			var condition = "CHK" + " == 'Y'";
	
			// getCaseCount 메서드 호출하여 조건식에 맞는 row를 카운트
			var chkCnt = this.view_dtl.getCaseCount(condition);
		
			/* (2) 체크된 행 카운트 */
			if (chkCnt > 0) {
	
				this.stock_order_update.clearData();
		
				// 세션에서 ADMIN_CODE 가져오기
				var sessionLogin = nexacro.getApplication().Session_login;
				var masterCode = sessionLogin.getColumn(0, "USER_CODE");
		
				//로그인 분기문(추후에 null 대신 마스터 계정으로 변경하기)
				if(masterCode != null){
				
				//체크된 항목 카운트
				for(var i=0; i<this.view_dtl.rowcount; i++){
					if(this.view_dtl.getColumn(i, "CHK") == "Y"){
						var row = this.stock_order_update.addRow();
				
						//dataset에 ADMIN_CODE 추가
						this.stock_order_update.copyRow(row, this.view_dtl, i);
						this.stock_order_update.setColumn(row,"STOCK_ORDER_STATUS", 2);
				}
			}
		}
	}else{
	alert("선택된 항목이 없습니다.");
	}		
		
	}
		/* 상태 업데이트 + 리로드 */
		this.fnUpdateStockOrder();
		this.reload();
		};
};

/* 2-8. 엑셀버튼 */
this.stock02_div_Button00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// 엑셀 내보내기 객체 생성
    this.exportObj = new ExcelExportObject("Export00", this);

    // 엑셀파일 이름 설정하기
    this.exportObj.set_exportfilename("stock_order_excel");
    
    // 엑셀 내보내기 URL 설정 (데모 URL입니다.)
    this.exportObj.set_exporturl("http://demo.nexacro.com/developer_guide/XExportImport");
    
    // 내보낼 항목 추가 (grid2의 데이터를 "Sheet1"의 A1 셀부터 시작해서 내보내기)
    this.exportObj.addExportItem(nexacro.ExportItemTypes.GRID, this.Grid01, "Sheet1!A1");

    // 성공 및 오류 이벤트 추가
    this.addEventHandler("onsuccess", this.Export00_onsuccess, this);
    this.addEventHandler("onerror", this.Export00_onerror, this);

    // 데이터 내보내기 시작
    var intExportedItem = this.exportObj.exportData();
    trace("Number of Exported Item: " + intExportedItem);
	
};

/* 엑셀 내보내기 성공 핸들러 */
this.Export00_onsuccess = function(obj:ExcelExportObject, e:nexacro.ExcelExportEventInfo) {
    trace("Export00_onsuccess");
};

/* 엑셀 내보내기 오류 핸들러 */
this.Export00_onerror = function(obj:ExcelExportObject, e:nexacro.ExcelExportEventInfo) {
    trace("Export00_onerror");
};


/****************************************************/  
/* 					3. 이벤트 함수					*/
/****************************************************/
/* 3-1. grid1 list 불러오기*/
this.fnStockMenuList = function()
{
	var strSvcId    = "grid1MenuList";
	var strSvcUrl   = "svc::grid1MenuList.do";
	var inData      = "";
	var outData     = "stock_grid1=stock_grid1";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	var isAsync     = true;

	this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
};

/* 3-2. grid2 list 불러오기 */
this.fnStocksOrderList = function()
{
	var strSvcId    = "grid2OrderList";
	var strSvcUrl   = "svc::grid2OrderList.do";
	var inData      = "";
	var outData     = "stock_grid2=stock_grid2";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	var isAsync     = true;

	this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
}

/* 3-3. fnFind_Sec_Combo() : 중분류 콤보 */
this.fnFind_Sec_Combo=function(){
  var strSvcId    = "SOSecCombo";
  var strSvcUrl   = "svc::SOSecCombo.do";
  var inData      = "";
  var outData     = "find_sec_combo=find_sec_combo";
  var strArg      = "";
  var callBackFnc = "fnCallback";
  var isAsync     = true;

  this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);    
};

/* 3-4. fnFind_Thir_Combo() : 소분류 콤보 */
this.fnFind_Thir_Combo=function(){
  var strSvcId    = "SOThirCombo";
  var strSvcUrl   = "svc::SOThirCombo.do";
  var inData      = "";
  var outData     = "find_thir_combo=find_thir_combo";
  var strArg      = "";
  var callBackFnc = "fnCallback";
  var isAsync     = true;

  this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);    
};

/* 3-5. fnCheck_Thir_Combo() : 중분류 선택 시 소분류 변화 */
this.fnCheck_Thir_Combo=function()
{
    var sec_code = this.find_thir_combo.getColumn(0, "SEC_CODE");

    /* 유효성 검사 : NullPointerException 방지 
	find_thir_combo 데이터셋의 SEC_CODE 값이 유효한지 검사.
	유효하지 않으면 경고 및 함수실행 중단.
	유효하면 서비스 호출.
	*/
    if (!sec_code || sec_code === "") {
        console.warn("SEC_CODE가 유효하지 않습니다.");
        return;
    }
	
  var strSvcId    = "ChkThirCombo";
  var strSvcUrl   = "svc::ChkThirCombo.do";
  var inData	  = "find_thir_combo=find_thir_combo";
  var outData     = "find_thir_combo=find_thir_combo";
  var strArg      = "";
  var callBackFnc = "fnCallback";
  var isAsync     = true;
  
  this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);  	
}

/* 3-6. grid1 조회하기 */
this.fnViewList = function()
{
  var strSvcId    = "ViewList";
  var strSvcUrl   = "svc::ViewList.do";
  var inData      = "search_so_grid=search_so_grid";
  var outData     = "stock_grid1=stock_grid1";
  var strArg      = "";
  var callBackFnc = "fnCallback";
  var isAsync     = true;

  this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);    
}

/* 3-7. grid2 조회하기 */
this.fnViewStockOrder = function()
{
  var strSvcId    = "ViewStockOrder";
  var strSvcUrl   = "svc::ViewStockOrder.do";
  var inData      = "search_so_grid=search_so_grid";
  var outData     = "stock_grid2=stock_grid2";
  var strArg      = "";
  var callBackFnc = "fnCallback";
  var isAsync     = true;

  this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);    
}

/* 3-8. grid1 발주신청 버튼 */
this.fnSaveStockOrder = function()
{

  var strSvcId    = "saveStockOrder";
  var strSvcUrl   = "svc::saveStockOrder.do";
  var inData      = "stock_order = stock_order";
  var outData     = "";
  var strArg      = "";
  var callBackFnc = "fnCallback";
  var isAsync     = true;

  this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);    
}

/* 3-9. grid2 저장 버튼 */
this.fnUpdateStockOrder = function()
{
  var strSvcId    = "updateStockOrder";
  var strSvcUrl   = "svc::updateStockOrder.do";
  var inData      = "stock_order_update = stock_order_update";
  var outData     = "";
  var strArg      = "";
  var callBackFnc = "fnCallback";
  var isAsync     = true;

  this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);    
}

/* 3-11. grid2 저장 버튼 -  재고 업데이트 */
this.fnUpdateStockQuantity = function()
{
  var strSvcId    = "updateStockQuantity";
  var strSvcUrl   = "svc::updateStockQuantity.do";
  var inData      = "stock_order_update = stock_order_update";
  var outData     = "";
  var strArg      = "";
  var callBackFnc = "fnCallback";
  var isAsync     = true;

  this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);    
}

/* 3-12. 콜백함수 */
this.fnCallback = function(svcID,errorCode,errorMsg)
{
   // 에러 시 화면 처리 내역
   if(errorCode == -1)
   {
      this.alert("이상해!");
      return;
   }else if(errorCode == -2)
   {
	this.stock_grid2.clearData();
	this.view_dtl.clearData();
   }
   // 분기문
   switch(svcID)
   {
        // 콤보 조회 시
       case "SOSecCombo" :
          this.find_sec_combo.insertRow(0);  
		  this.find_sec_combo.setColumn(0, "SEC_CODE", ""); //코드도 같이 채워주어야 선택 시 빈칸이 되지 않는다
          this.find_sec_combo.setColumn(0, "SEC_NAME", "전체보기"); 
         break;
       case "SOThirCombo" :
		case "ChkThirCombo" :
          this.find_thir_combo.insertRow(0); 
		  this.find_thir_combo.setColumn(0, "PRODUCT_CODE", "");
          this.find_thir_combo.setColumn(0, "PRODUCT_NAME", "전체보기"); 
         break;
		case "grid2OrderList":
		case "ViewStockOrder":
			this.reset_paging();
		break;
	}
};
this.ImageViewer00_onclick = function(obj:nexacro.ImageViewer,e:nexacro.ClickEventInfo)
{
	this.reload();
};
]]></Script>
    <Objects>
      <Dataset id="stock_grid1" useclientlayout="true">
        <ColumnInfo>
          <Column id="PRODUCT_NAME" type="STRING" size="256"/>
          <Column id="PRODUCT_CODE" type="STRING" size="256"/>
          <Column id="PRODUCT_QUANTITY" type="INT" size="256"/>
          <Column id="CHK" type="STRING" size="256" description="발주신청용체크"/>
          <Column id="STOCK_ORDER_QUANTITY" type="INT" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="stock_grid2" useclientlayout="true">
        <ColumnInfo>
          <Column id="STOCK_ORDER_CODE" type="STRING" size="256" description="발주신청서 코드"/>
          <Column id="PRODUCT_CODE" type="STRING" size="256" description="메뉴코드"/>
          <Column id="PRODUCT_NAME" type="STRING" size="256" description="메뉴명"/>
          <Column id="PRODUCT_QUANTITY" type="INT" size="256"/>
          <Column id="STOCK_ORDER_DATE" type="STRING" size="256" description="발주일자"/>
          <Column id="STOCK_ORDER_IN_DATE" type="STRING" size="256"/>
          <Column id="STOCK_ORDER_QUANTITY" type="INT" size="256" description="발주수량"/>
          <Column id="USER_CODE" type="STRING" size="256" description="관리자 코드"/>
          <Column id="STOCK_ORDER_STATUS" type="STRING" size="256" description="발주현황"/>
          <Column id="CHK" type="STRING" size="256" description="체크박스"/>
          <Column id="STOCK_ORDER_STATUS_IN" type="STRING" size="256" description="입고완료 처리"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="stock_order" useclientlayout="true">
        <ColumnInfo>
          <Column id="USER_CODE" type="STRING" size="256" description="관리자 코드"/>
          <Column id="STOCK_ORDER_CODE" type="STRING" size="256" description="발주신청서 코드"/>
          <Column id="PRODUCT_CODE" type="STRING" size="256" description="음식코드"/>
          <Column id="PRODUCT_NAME" type="STRING" size="256" description="음식명"/>
          <Column id="PRODUCT_QUANTITY" type="STRING" size="256"/>
          <Column id="STOCK_ORDER_QUANTITY" type="INT" size="256" description="발주수량"/>
          <Column id="STOCK_ORDER_DATE" type="STRING" size="256" description="발주일자"/>
          <Column id="STOCK_ORDER_STATUS" type="STRING" size="256" description="발주현황"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="find_sec_combo">
        <ColumnInfo>
          <Column id="FIR_CODE" type="STRING" size="256"/>
          <Column id="SEC_CODE" type="STRING" size="256"/>
          <Column id="SEC_NAME" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="find_thir_combo">
        <ColumnInfo>
          <Column id="FIR_CODE" type="STRING" size="256"/>
          <Column id="SEC_CODE" type="STRING" size="256"/>
          <Column id="PRODUCT_CODE" type="STRING" size="256"/>
          <Column id="PRODUCT_NAME" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="search_so_grid" useclientlayout="true">
        <ColumnInfo>
          <Column id="SEC_CODE" type="STRING" size="256"/>
          <Column id="PRODUCT_CODE" type="STRING" size="256"/>
          <Column id="STOCK_ORDER_DATE_1" type="STRING" size="256"/>
          <Column id="STOCK_ORDER_DATE_2" type="STRING" size="256"/>
          <Column id="STOCK_ORDER_STATUS" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_stockorder_state" useclientlayout="true">
        <ColumnInfo>
          <Column id="STOCK_ORDER_STATUS_IN" type="STRING" size="256"/>
          <Column id="TEXT" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="STOCK_ORDER_STATUS_IN">0</Col>
            <Col id="TEXT">입고대기</Col>
          </Row>
          <Row>
            <Col id="STOCK_ORDER_STATUS_IN">1</Col>
            <Col id="TEXT">입고완료</Col>
          </Row>
          <Row>
            <Col id="STOCK_ORDER_STATUS_IN">2</Col>
            <Col id="TEXT">발주취소</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="stock_order_update" useclientlayout="true">
        <ColumnInfo>
          <Column id="USER_CODE" type="STRING" size="256" description="관리자 코드"/>
          <Column id="STOCK_ORDER_CODE" type="STRING" size="256" description="발주신청서 코드"/>
          <Column id="PRODUCT_CODE" type="STRING" size="256" description="음식코드"/>
          <Column id="PRODUCT_NAME" type="STRING" size="256" description="음식명"/>
          <Column id="PRODUCT_QUANTITY" type="INT" size="256" description="현재재고"/>
          <Column id="STOCK_ORDER_QUANTITY" type="INT" size="256" description="발주수량"/>
          <Column id="STOCK_ORDER_DATE" type="STRING" size="256" description="발주일자"/>
          <Column id="STOCK_ORDER_IN_DATE" type="STRING" size="256"/>
          <Column id="STOCK_ORDER_STATUS" type="STRING" size="256" description="발주현황"/>
          <Column id="STOCK_ORDER_STATUS_IN" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="paging">
        <ColumnInfo>
          <Column id="page" type="INT" size="256"/>
          <Column id="start" type="INT" size="256"/>
          <Column id="end" type="INT" size="256"/>
          <Column id="pagecount" type="INT" size="256"/>
          <Column id="pagesize" type="INT" size="256"/>
          <Column id="nextpage" type="INT" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="view_dtl" useclientlayout="true" oncolumnchanged="stock_grid2_oncolumnchanged">
        <ColumnInfo>
          <Column id="STOCK_ORDER_CODE" type="STRING" size="256" description="발주신청서 코드"/>
          <Column id="PRODUCT_CODE" type="STRING" size="256" description="메뉴코드"/>
          <Column id="PRODUCT_NAME" type="STRING" size="256" description="메뉴명"/>
          <Column id="PRODUCT_QUANTITY" type="INT" size="256"/>
          <Column id="STOCK_ORDER_DATE" type="STRING" size="256" description="발주일자"/>
          <Column id="STOCK_ORDER_IN_DATE" type="STRING" size="256"/>
          <Column id="STOCK_ORDER_QUANTITY" type="INT" size="256" description="발주수량"/>
          <Column id="USER_CODE" type="STRING" size="256" description="관리자 코드"/>
          <Column id="STOCK_ORDER_STATUS" type="STRING" size="256" description="발주현황"/>
          <Column id="CHK" type="STRING" size="256" description="체크박스"/>
          <Column id="STOCK_ORDER_STATUS_IN" type="STRING" size="256" description="입고완료 처리"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
