<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="bookcafe.code.serviceImpl.CodeMapper">

	<!-- 대분류 코드  --> 
	<select id="init_fir_code" resultType="java.util.Map">
	SELECT * FROM FIR_CODE ORDER BY FIR_CODE ;
	</select>
	
	<!--  대분류 코드 조회(view)-->
	<select id="view_code" resultType="java.util.Map">
	
	SELECT 
    F.PRODUCT_CODE, 
    F.PRODUCT_NAME, 
    F.PRODUCT_PRICE, 
    SC.SEC_NAME, 
    fc.FIR_CODE, 
    fc.USE_STATUS, 
    F.PRODUCT_PATH, 
    'N' AS CHK, 
    IFNULL("-", '-') AS BOOK_WRITER, 
    IFNULL("-", '-') AS BOOK_PUBLICATION_DATE,
    PRODUCT_STATUS
FROM 
    FOOD F 
JOIN 
    SEC_CODE SC ON F.PRODUCT_CATEGORY = SC.SEC_CODE
JOIN 
    FIR_CODE fc ON fc.FIR_CODE = SC.FIR_CODE
UNION 
SELECT 
    BOOK_CODE, 
    BOOK_NAME, 
    BOOK_PRICE, 
    SEC_NAME, 
    fc.FIR_CODE, 
    fc.USE_STATUS, 
    BOOK_PATH, 
    'N' AS CHK, 
    BOOK_WRITER, 
    BOOK_PUBLICATION_DATE,
    PRODUCT_STATUS
FROM 
    BOOK B 
JOIN 
    SEC_CODE SC ON B.BOOK_CATEGORY = SC.SEC_CODE
JOIN 
    FIR_CODE fc ON fc.FIR_CODE = SC.FIR_CODE;

	</select>
	
	<select id="fir_category_select" resultType="java.util.Map">
	<choose>
	<when test="FIR_CODE.equals('fir_001')">
	SELECT 
			SEC_CODE, 
			SC.SEC_NAME, BOOK_NAME AS PRODUCT_NAME,
			USE_STATUS, 
			BOOK_PRICE AS PRODUCT_PRICE, 
			BOOK_CODE AS PRODUCT_CODE,
			BOOK_PATH AS PRODUCT_PATH,
			BOOK_WRITER, 
    		BOOK_PUBLICATION_DATE, 
			'N' AS CHK,
			BOOK_PRICE,
			PRODUCT_STATUS
	FROM 
			BOOK B JOIN SEC_CODE SC
	ON 
			BOOK_CATEGORY = SC.SEC_CODE ;
	</when>
	<when test="FIR_CODE.equals('fir_002')">
	SELECT 
			PRODUCT_NAME, 
			PRODUCT_PRICE,
			PRODUCT_CATEGORY,
			SEC_NAME,USE_STATUS,
			PRODUCT_CODE,
			PRODUCT_PRICE,
			PRODUCT_PATH,
			'N' AS CHK,
			IFNULL("-", '-') AS BOOK_WRITER,  
			IFNULL("-", '-') AS BOOK_PUBLICATION_DATE,
			PRODUCT_STATUS
			
	FROM 
			FOOD F JOIN SEC_CODE SC
	ON 
			F.PRODUCT_CATEGORY = SC.SEC_CODE;
	</when>
	<otherwise>
	SELECT 
			PRODUCT_CODE, PRODUCT_NAME, PRODUCT_PRICE, SEC_NAME , fc.FIR_CODE, fc.USE_STATUS, PRODUCT_PATH, 'N' AS CHK, IFNULL("-", '-') AS BOOK_WRITER, 
   			IFNULL("-", '-') AS BOOK_PUBLICATION_DATE, PRODUCT_STATUS
	FROM 
			FOOD F JOIN SEC_CODE SC 
	ON 
			F.PRODUCT_CATEGORY = SC.SEC_CODE
	JOIN 
			FIR_CODE fc on fc.FIR_CODE = SC.FIR_CODE
	UNION
	
	SELECT 
			BOOK_CODE, BOOK_NAME, BOOK_PRICE, SEC_NAME, fc.FIR_CODE, fc.USE_STATUS, BOOK_PATH, 'N' AS CHK, BOOK_WRITER, 
    		BOOK_PUBLICATION_DATE, PRODUCT_STATUS
	FROM 
			BOOK B JOIN SEC_CODE SC 
	ON 
			B.BOOK_CATEGORY = SC.SEC_CODE
	JOIN 
			FIR_CODE fc ON fc.FIR_CODE = SC.FIR_CODE;
	</otherwise>
	
	</choose>
	</select>
	
	<select id="sec_category_select" resultType="java.util.Map">
	<choose>
	<when test="FIR_CODE.equals('fir_000')">
		SELECT * FROM SEC_CODE ORDER BY FIR_CODE;
	</when>
	<otherwise>
		SELECT 
				*,  IFNULL("-", '-') AS BOOK_WRITER, IFNULL("-", '-') AS BOOK_PUBLICATION_DATE 
		FROM 
				SEC_CODE 
		WHERE 
				FIR_CODE =#{FIR_CODE}
	</otherwise>
	</choose>
	</select>
	
	
	<select id="choice_sec_code" resultType="java.util.Map">
SELECT 
		SEC_CODE, F.PRODUCT_NAME,USE_STATUS,SEC_NAME, PRODUCT_PRICE, PRODUCT_CODE, PRODUCT_PATH, IFNULL("-", '-') AS BOOK_WRITER, 
   		IFNULL("-", '-') AS BOOK_PUBLICATION_DATE, PRODUCT_STATUS
FROM
		 FOOD F JOIN SEC_CODE SC
ON 
		F.PRODUCT_CATEGORY = SC. SEC_CODE
WHERE 
		SEC_CODE = #{SEC_CODE}
UNION
SELECT 
		SEC_CODE, B.BOOK_NAME,USE_STATUS,SEC_NAME, BOOK_PRICE, BOOK_CODE,BOOK_PATH, BOOK_WRITER, 
    	BOOK_PUBLICATION_DATE, PRODUCT_STATUS 
FROM 
		BOOK B JOIN SEC_CODE SC
ON 
		B.BOOK_CATEGORY = SC. SEC_CODE
WHERE 
		SEC_CODE = #{SEC_CODE};
	</select>
	
<select id="sec_code_chk" resultType="java.util.Map">
 SELECT * FROM SEC_CODE s JOIN FIR_CODE f
  ON s.FIR_CODE = f.FIR_CODE WHERE FIR_NAME= #{code}
</select>

 
</mapper>